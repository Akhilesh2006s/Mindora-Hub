import React from 'react';
import {
  View,
  Text,
  StyleSheet,
  ScrollView,
  TouchableOpacity,
  SafeAreaView,
} from 'react-native';
import { MaterialIcons } from '@expo/vector-icons';
import { LinearGradient } from 'expo-linear-gradient';
import { Card } from 'react-native-paper';
import { useTheme } from '../../contexts/ThemeContext';

interface AdminDashboardScreenProps {
  navigation: any;
}

const AdminDashboardScreen: React.FC<AdminDashboardScreenProps> = ({ navigation }) => {
  const { theme, isDarkMode, toggleTheme } = useTheme();
  
  const stats = {
    totalUsers: 1250,
    totalModules: 45,
    totalQuizzes: 120,
    totalVideos: 200,
    activeUsers: 850,
    completedModules: 3200,
  };

  const quickActions = [
    {
      id: 'content-upload',
      title: 'Upload Content',
      description: 'Add videos, documents, and media to modules',
      icon: 'cloud-upload',
      color: ['#667eea', '#764ba2'],
      screen: 'ContentUpload',
    },
    {
      id: 'video-upload',
      title: 'Video Management',
      description: 'Upload and manage video content',
      icon: 'video-library',
      color: ['#f093fb', '#f5576c'],
      screen: 'VideoUpload',
    },
    {
      id: 'quiz-management',
      title: 'Quiz Management',
      description: 'Create and manage quizzes',
      icon: 'quiz',
      color: ['#4facfe', '#00f2fe'],
      screen: 'QuizManagement',
    },
    {
      id: 'user-management',
      title: 'User Management',
      description: 'Manage users, roles, and permissions',
      icon: 'people',
      color: ['#fa709a', '#fee140'],
      screen: 'UserManagement',
    },
  ];

  const handleQuickAction = (action: any) => {
    navigation.navigate(action.screen);
  };

  return (
    <LinearGradient
      colors={['#667eea', '#764ba2', '#f093fb']}
      style={styles.headerGradient}
      start={{ x: 0, y: 0 }}
      end={{ x: 1, y: 1 }}
    >
      <SafeAreaView style={[styles.container, { backgroundColor: theme.colors.background }]}>
        <View style={styles.header}>
          <View style={styles.headerContent}>
            <TouchableOpacity onPress={() => navigation.goBack()} style={styles.backButton}>
              <MaterialIcons name="arrow-back" size={24} color="white" />
            </TouchableOpacity>
            
            <View style={styles.headerTitleContainer}>
              <MaterialIcons name="admin-panel-settings" size={32} color="white" style={styles.headerIcon} />
              <Text style={styles.headerTitle}>Admin Dashboard</Text>
            </View>
            
            <TouchableOpacity onPress={toggleTheme} style={styles.themeToggle}>
              <MaterialIcons
                name={isDarkMode ? "wb-sunny" : "nightlight-round"}
                size={24}
                color="white"
              />
            </TouchableOpacity>
          </View>
          
          <Text style={styles.headerSubtitle}>Manage your learning platform</Text>
        </View>

        <ScrollView
          style={styles.scrollView}
          contentContainerStyle={styles.scrollContent}
          showsVerticalScrollIndicator={false}
        >
          <View style={styles.statsContainer}>
            <Text style={[styles.sectionTitle, { color: theme.colors.onSurface }]}>
              Platform Overview
            </Text>
            
            <View style={styles.statsGrid}>
              <Card style={[styles.statCard, { backgroundColor: theme.colors.surface }]} elevation={2}>
                <Card.Content style={styles.statContent}>
                  <MaterialIcons name="people" size={24} color="#667eea" />
                  <Text style={[styles.statNumber, { color: theme.colors.onSurface }]}>
                    {stats.totalUsers.toLocaleString()}
                  </Text>
                  <Text style={[styles.statLabel, { color: theme.colors.onSurfaceVariant }]}>
                    Total Users
                  </Text>
                </Card.Content>
              </Card>

              <Card style={[styles.statCard, { backgroundColor: theme.colors.surface }]} elevation={2}>
                <Card.Content style={styles.statContent}>
                  <MaterialIcons name="school" size={24} color="#f093fb" />
                  <Text style={[styles.statNumber, { color: theme.colors.onSurface }]}>
                    {stats.totalModules}
                  </Text>
                  <Text style={[styles.statLabel, { color: theme.colors.onSurfaceVariant }]}>
                    Modules
                  </Text>
                </Card.Content>
              </Card>

              <Card style={[styles.statCard, { backgroundColor: theme.colors.surface }]} elevation={2}>
                <Card.Content style={styles.statContent}>
                  <MaterialIcons name="quiz" size={24} color="#4facfe" />
                  <Text style={[styles.statNumber, { color: theme.colors.onSurface }]}>
                    {stats.totalQuizzes}
                  </Text>
                  <Text style={[styles.statLabel, { color: theme.colors.onSurfaceVariant }]}>
                    Quizzes
                  </Text>
                </Card.Content>
              </Card>

              <Card style={[styles.statCard, { backgroundColor: theme.colors.surface }]} elevation={2}>
                <Card.Content style={styles.statContent}>
                  <MaterialIcons name="video-library" size={24} color="#43e97b" />
                  <Text style={[styles.statNumber, { color: theme.colors.onSurface }]}>
                    {stats.totalVideos}
                  </Text>
                  <Text style={[styles.statLabel, { color: theme.colors.onSurfaceVariant }]}>
                    Videos
                  </Text>
                </Card.Content>
              </Card>
            </View>
          </View>

          <View style={styles.actionsContainer}>
            <Text style={[styles.sectionTitle, { color: theme.colors.onSurface }]}>
              Quick Actions
            </Text>
            
            <View style={styles.quickActionsGrid}>
              {quickActions.map((action) => (
                <TouchableOpacity
                  key={action.id}
                  style={styles.quickActionItem}
                  onPress={() => handleQuickAction(action)}
                >
                  <LinearGradient
                    colors={action.color}
                    style={styles.quickActionGradient}
                    start={{ x: 0, y: 0 }}
                    end={{ x: 1, y: 1 }}
                  >
                    <MaterialIcons name={action.icon as any} size={32} color="white" />
                    <Text style={styles.quickActionTitle}>{action.title}</Text>
                    <Text style={styles.quickActionDescription}>{action.description}</Text>
                  </LinearGradient>
                </TouchableOpacity>
              ))}
            </View>
          </View>
        </ScrollView>
      </SafeAreaView>
    </LinearGradient>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
  headerGradient: {
    paddingTop: 20,
  },
  header: {
    padding: 20,
    paddingBottom: 16,
  },
  headerContent: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 8,
  },
  backButton: {
    padding: 8,
    borderRadius: 20,
    backgroundColor: 'rgba(255, 255, 255, 0.2)',
  },
  headerTitleContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    flex: 1,
    justifyContent: 'center',
    marginLeft: -24,
  },
  headerIcon: {
    marginRight: 8,
  },
  headerTitle: {
    fontSize: 24,
    fontWeight: 'bold',
    color: 'white',
  },
  themeToggle: {
    padding: 8,
    borderRadius: 20,
    backgroundColor: 'rgba(255, 255, 255, 0.2)',
  },
  headerSubtitle: {
    fontSize: 14,
    color: 'rgba(255, 255, 255, 0.8)',
    textAlign: 'center',
    marginTop: 8,
  },
  scrollView: {
    flex: 1,
  },
  scrollContent: {
    paddingBottom: 20,
  },
  statsContainer: {
    padding: 20,
  },
  sectionTitle: {
    fontSize: 22,
    fontWeight: 'bold',
    marginBottom: 16,
  },
  statsGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'space-between',
  },
  statCard: {
    width: '48%',
    marginBottom: 12,
    borderRadius: 12,
  },
  statContent: {
    alignItems: 'center',
    padding: 16,
  },
  statNumber: {
    fontSize: 20,
    fontWeight: 'bold',
    marginTop: 8,
  },
  statLabel: {
    fontSize: 11,
    marginTop: 4,
    textAlign: 'center',
  },
  actionsContainer: {
    padding: 20,
  },
  quickActionsGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'space-between',
  },
  quickActionItem: {
    width: '48%',
    marginBottom: 16,
    borderRadius: 16,
    overflow: 'hidden',
  },
  quickActionGradient: {
    padding: 16,
    minHeight: 120,
    alignItems: 'center',
    justifyContent: 'center',
  },
  quickActionTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    color: 'white',
    marginTop: 8,
    textAlign: 'center',
  },
  quickActionDescription: {
    fontSize: 12,
    color: 'rgba(255, 255, 255, 0.8)',
    marginTop: 4,
    textAlign: 'center',
    lineHeight: 16,
  },
});

export default AdminDashboardScreen;
